# To start the docker daemon:
docker -d

# Start/stop docker as a service (Ubuntu)
sudo service docker start
sudo service docker stop

# Start/stop docker with systemctl
sudo systemctl start docker
sudo systemctl stop docker

# To start a container with an interactive shell:
docker run -ti <image-name> /bin/bash

# To "shell" into a running container (docker-1.3+):
docker exec -ti <container-name> bash

# To inspect a running container:
docker inspect <container-name> (or <container-id>)

# To get the process ID for a container:
docker inspect --format {{.State.Pid}} <container-name-or-id>

# To list (and pretty-print) the current mounted volumes for a container:
docker inspect --format='{{json .Volumes}}' <container-id> | python -mjson.tool

# To copy files/folders between a container and your host:
docker cp foo.txt mycontainer:/foo.txt

# To list currently running containers:
docker ps

# To list all containers:
docker ps -a

# To remove all stopped containers:
docker rm $(docker ps -qa)

# To list all images:
docker images

# To remove all untagged images:
docker rmi $(docker images | grep "^<none>" | awk '{print $3}')

# To remove all volumes not used by at least one container:
docker volume prune

# To remove stopped containers, unused volumes and clear the cache
docker system prune

# To map UID/GID on run
docker run --rm -it --user $(id -u):$(id -g) ubuntu-24-04 /bin/bash

# To build an image with tag <tag> from a <docker-file>, use the following command:
# <ocntext> refers to the directory relative to which the image is built,
# e.g., the current working directory .
docker build -t <tag> -f <docker-file> <context>
